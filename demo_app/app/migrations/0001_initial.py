# Generated by Django 2.0 on 2019-04-25 12:55

import app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_count', models.IntegerField()),
                ('view_count', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Access Record',
                'verbose_name': 'Access Record',
            },
        ),
        migrations.CreateModel(
            name='ccpa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=64, verbose_name='报名地区')),
                ('periods', models.CharField(choices=[('一期', '一期'), ('二期', '二期'), ('三期', '三期')], max_length=64, verbose_name='期数')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('pinyin', models.CharField(max_length=64, verbose_name='姓名拼音')),
                ('sex', models.CharField(choices=[('男', '男'), ('女', '女')], max_length=64, verbose_name='性别')),
                ('guarantee_date', models.DateField(verbose_name='出生日期')),
                ('nation', models.CharField(max_length=16, verbose_name='民族')),
                ('edu', models.CharField(choices=[('本科', '本科'), ('专科', '专科'), ('硕士', '硕士')], max_length=64, verbose_name='学历')),
                ('poilt', models.CharField(choices=[('群众', '群众'), ('党员', '党员')], max_length=64, verbose_name='政治面貌')),
                ('icc', models.CharField(max_length=64, verbose_name='身份证号')),
                ('phone', models.CharField(max_length=20, verbose_name='手机号')),
                ('email', models.EmailField(error_messages={'invalid': '格式错了.'}, max_length=254, verbose_name='联系邮箱')),
                ('school', models.CharField(max_length=64, verbose_name='学校')),
                ('specialty', models.CharField(max_length=64, verbose_name='专业')),
                ('work', models.CharField(blank=True, max_length=64, null=True, verbose_name='工作单位')),
                ('job', models.CharField(blank=True, max_length=64, null=True, verbose_name='职务')),
                ('address', models.CharField(max_length=128, verbose_name='联系地址')),
                ('enaddress', models.CharField(max_length=128, verbose_name='英文地址')),
                ('Postcodes', models.CharField(max_length=16, verbose_name='邮编')),
                ('telephone', models.CharField(max_length=16, verbose_name='电话')),
                ('type', models.CharField(choices=[('CCPA初级', 'CCPA初级'), ('CCPA中级', 'CCPA中级'), ('CCPA高级', 'CCPA高级')], max_length=64, verbose_name='报考类型')),
                ('exam_date', models.DateField(verbose_name='考试时间')),
                ('exam_address', models.CharField(max_length=128, verbose_name='考试地点')),
                ('photo', models.ImageField(blank=True, null=True, storage=app.models.ImageStorage(), upload_to='upload/image/%Y/%m', verbose_name='上传照片')),
                ('status', models.CharField(choices=[('草稿', '草稿'), ('通过', '通过')], default='草稿', max_length=64, verbose_name='报名状态')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
            ],
            options={
                'verbose_name_plural': 'CCPA项目',
                'verbose_name': 'CCPA项目',
            },
        ),
        migrations.CreateModel(
            name='customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('date_of_birth', models.DateField(verbose_name='birthday')),
                ('contact_number', models.CharField(max_length=20)),
                ('health_fund_number', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'verbose_name_plural': 'customer',
                'verbose_name': 'customer',
            },
        ),
        migrations.CreateModel(
            name='fund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='groupinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_no', models.CharField(max_length=64, verbose_name='机构号')),
                ('group_name', models.CharField(max_length=64, verbose_name='机构名')),
            ],
            options={
                'verbose_name_plural': '机构信息',
                'verbose_name': '机构信息',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('nagios_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Nagios Host ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('internal_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=128)),
                ('ssh_port', models.IntegerField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(0, 'Normal'), (1, 'Down'), (2, 'No Connect'), (3, 'Error')])),
                ('brand', models.CharField(choices=[('DELL', 'DELL'), ('HP', 'HP'), ('Other', 'Other')], max_length=64)),
                ('model', models.CharField(max_length=64)),
                ('cpu', models.CharField(max_length=64)),
                ('core_num', models.SmallIntegerField(choices=[(2, '2 Cores'), (4, '4 Cores'), (6, '6 Cores'), (8, '8 Cores'), (10, '10 Cores'), (12, '12 Cores'), (14, '14 Cores'), (16, '16 Cores'), (18, '18 Cores'), (20, '20 Cores'), (22, '22 Cores'), (24, '24 Cores'), (26, '26 Cores'), (28, '28 Cores')])),
                ('hard_disk', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('system', models.CharField(choices=[('CentOS', 'CentOS'), ('FreeBSD', 'FreeBSD'), ('Ubuntu', 'Ubuntu')], max_length=32, verbose_name='System OS')),
                ('system_version', models.CharField(max_length=32)),
                ('system_arch', models.CharField(choices=[('x86_64', 'x86_64'), ('i386', 'i386')], max_length=32)),
                ('create_time', models.DateField()),
                ('guarantee_date', models.DateField()),
                ('service_type', models.CharField(choices=[('moniter', 'Moniter'), ('lvs', 'LVS'), ('db', 'Database'), ('analysis', 'Analysis'), ('admin', 'Admin'), ('storge', 'Storge'), ('web', 'WEB'), ('email', 'Email'), ('mix', 'Mix')], max_length=32)),
                ('description', models.TextField()),
                ('administrator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Admin')),
            ],
            options={
                'verbose_name_plural': 'Host',
                'verbose_name': 'Host',
            },
        ),
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('hosts', models.ManyToManyField(blank=True, related_name='groups', to='app.Host', verbose_name='Hosts')),
            ],
            options={
                'verbose_name_plural': 'Host Group',
                'verbose_name': 'Host Group',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('contact', models.CharField(max_length=32)),
                ('telphone', models.CharField(max_length=32)),
                ('address', models.CharField(max_length=128)),
                ('customer_id', models.CharField(max_length=128)),
                ('create_time', models.DateField(auto_now=True)),
                ('groups', models.ManyToManyField(to='auth.Group')),
            ],
            options={
                'verbose_name_plural': 'IDC',
                'verbose_name': 'IDC',
            },
        ),
        migrations.CreateModel(
            name='kmChoices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name_plural': '考试科目',
                'verbose_name': '考试科目',
            },
        ),
        migrations.CreateModel(
            name='litreat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yearm', models.CharField(max_length=20, verbose_name='记录年月')),
                ('icc_id', models.CharField(max_length=50, verbose_name='身份证号')),
                ('con_num', models.CharField(max_length=50, verbose_name='账号')),
                ('open_ins', models.CharField(max_length=50, null=True, verbose_name='开户机构')),
                ('open_no', models.CharField(max_length=50, verbose_name='开户机构号')),
                ('cust_name', models.CharField(max_length=20, verbose_name='客户名')),
                ('jy_count', models.IntegerField(default=0, verbose_name='交易笔数')),
                ('jy_num', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='交易金额')),
                ('day_avg', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='日均')),
                ('all_jy_count', models.IntegerField(default=0, verbose_name='总交易笔数')),
                ('all_jy_num', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='总交易金额')),
                ('is_life', models.BooleanField(default=False, verbose_name='是否生活圈')),
                ('is_show', models.BooleanField(default=False, verbose_name='是否展示易拉宝')),
                ('is_ontime', models.BooleanField(default=False, verbose_name='是否按时还款')),
                ('nowm_acc', models.IntegerField(default=0, verbose_name='本月积分')),
                ('all_acc', models.IntegerField(default=0, verbose_name='总积分/贡献度')),
                ('can_use_acc', models.IntegerField(default=0, verbose_name='可用积分')),
                ('used_acc', models.IntegerField(default=0, verbose_name='本月消费积分')),
                ('acc_detail', models.CharField(max_length=1204, verbose_name='积分消费详情')),
                ('is_quit', models.BooleanField(default=False, verbose_name='是否清退')),
                ('is_bak', models.BooleanField(default=False, verbose_name='是否')),
            ],
            options={
                'verbose_name_plural': '年月记录',
                'verbose_name': '年月记录',
            },
        ),
        migrations.CreateModel(
            name='MaintainLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintain_type', models.CharField(max_length=32)),
                ('hard_type', models.CharField(max_length=16)),
                ('time', models.DateTimeField()),
                ('operator', models.CharField(max_length=16)),
                ('note', models.TextField()),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Host')),
            ],
            options={
                'verbose_name_plural': 'Maintain Log',
                'verbose_name': 'Maintain Log',
            },
        ),
        migrations.CreateModel(
            name='provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('health_fund_number', models.CharField(max_length=64, verbose_name='provider number')),
                ('health_fund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.fund')),
            ],
            options={
                'verbose_name_plural': 'provider',
                'verbose_name': 'provider',
            },
        ),
        migrations.CreateModel(
            name='treatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('hicaps', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cash', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minute', models.IntegerField()),
                ('cust', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer', verbose_name='customer')),
            ],
            options={
                'verbose_name_plural': 'treatment',
                'verbose_name': 'treatment',
            },
        ),
        migrations.CreateModel(
            name='treatment_item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='xss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=64, verbose_name='报名地区')),
                ('periods', models.CharField(choices=[('一期', '一期'), ('二期', '二期'), ('三期', '三期')], max_length=64, verbose_name='期数')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('pinyin', models.CharField(max_length=64, verbose_name='姓名拼音')),
                ('sex', models.CharField(choices=[('男', '男'), ('女', '女')], max_length=64, verbose_name='性别')),
                ('guarantee_date', models.DateField(verbose_name='出生日期')),
                ('nation', models.CharField(max_length=16, verbose_name='民族')),
                ('edu', models.CharField(choices=[('本科', '本科'), ('专科', '专科'), ('硕士', '硕士')], max_length=64, verbose_name='学历')),
                ('poilt', models.CharField(choices=[('群众', '群众'), ('党员', '党员')], max_length=64, verbose_name='政治面貌')),
                ('icc', models.CharField(max_length=64, verbose_name='身份证号')),
                ('phone', models.CharField(max_length=20, verbose_name='手机号')),
                ('email', models.EmailField(error_messages={'invalid': '格式错了.'}, max_length=254, verbose_name='联系邮箱')),
                ('work', models.CharField(blank=True, max_length=64, null=True, verbose_name='工作单位')),
                ('job', models.CharField(blank=True, max_length=64, null=True, verbose_name='职务')),
                ('address', models.CharField(max_length=128, verbose_name='联系地址')),
                ('enaddress', models.CharField(max_length=128, verbose_name='英文地址')),
                ('Postcodes', models.CharField(max_length=16, verbose_name='邮编')),
                ('telephone', models.CharField(max_length=16, verbose_name='电话')),
                ('type', models.CharField(choices=[('CCPA《薪税师》一级', 'CCPA《薪税师》一级'), ('CCPA《薪税师》二级', 'CCPA《薪税师》二级'), ('CCPA《薪税师》三级', 'CCPA《薪税师》三级')], max_length=64, verbose_name='报名类型')),
                ('below_date', models.DateField(verbose_name='线下授课时间')),
                ('exam_date', models.DateField(verbose_name='考试时间')),
                ('exam_address', models.CharField(max_length=128, verbose_name='考试地点')),
                ('photo', models.ImageField(blank=True, null=True, storage=app.models.ImageStorage(), upload_to='upload/image/%Y/%m', verbose_name='上传照片')),
                ('status', models.CharField(choices=[('草稿', '草稿'), ('通过', '通过')], default='草稿', max_length=64, verbose_name='报名状态')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='培训机构名称')),
            ],
            options={
                'verbose_name_plural': '薪税师项目',
                'verbose_name': '薪税师项目',
            },
        ),
        migrations.AddField(
            model_name='treatment',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.treatment_item'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='prov',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.provider', verbose_name='provider'),
        ),
        migrations.AddField(
            model_name='host',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.IDC'),
        ),
        migrations.AddField(
            model_name='customer',
            name='health_fund',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.fund'),
        ),
        migrations.AddField(
            model_name='ccpa',
            name='kskm',
            field=models.ManyToManyField(to='app.kmChoices', verbose_name='考试科目'),
        ),
        migrations.AddField(
            model_name='ccpa',
            name='train',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='培训机构名称'),
        ),
    ]
